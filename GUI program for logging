import tkinter as tk
from tkinter import ttk
import warnings
import serial
import serial.tools.list_ports



# Function to start logging
def start_logging():
    global ser
    arduino_ports = [
        p.device
        for p in serial.tools.list_ports.comports()
        if 'Arduino' in p.description  # may need tweaking to match new arduinos
        ]
    if not arduino_ports:
        raise IOError("No Arduino found")
    if len(arduino_ports) > 1:
        warnings.warn('Multiple Arduinos found - using the first')

    ser = serial.Serial(arduino_ports[0], 9600) 
    log_button["state"] = "disabled"
    stop_button["state"] = "normal"
    log_data()

# Function to stop logging
def stop_logging():
    global ser
    ser.close()
    log_button["state"] = "normal"
    stop_button["state"] = "disabled"

# Function to log data
def log_data():
    global ser
    if ser and ser.in_waiting > 0:  # Check if ser is not None
        data = ser.readline().decode('utf-8').strip()
        log_text.insert(tk.END, data + '\n')
        log_text.see(tk.END)
    if ser:  # Check if ser is not None
        root.after(100, log_data)  # Schedule the function to run after 100 milliseconds


# Create the main window
root = tk.Tk()
root.title("Arduino Data Logger")

# Create and place the widgets
log_button = ttk.Button(root, text="Start Logging", command=start_logging)
log_button.pack(pady=10)

stop_button = ttk.Button(root, text="Stop Logging", command=stop_logging, state="disabled")
stop_button.pack(pady=10)

log_text = tk.Text(root, wrap=tk.WORD, height=20, width=50)
log_text.pack(padx=10, pady=10)

# Start the GUI application
root.mainloop()
